(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))r(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const d of t.addedNodes)d.tagName==="LINK"&&d.rel==="modulepreload"&&r(d)}).observe(document,{childList:!0,subtree:!0});function c(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function r(e){if(e.ep)return;e.ep=!0;const t=c(e);fetch(e.href,t)}})();const i=new THREE.Scene,s=new THREE.PerspectiveCamera(75,window.innerWidth/window.innerHeight,.5,100);s.position.z=50;const a=new THREE.WebGLRenderer;a.setSize(window.innerWidth,window.innerHeight);document.body.appendChild(a.domElement);const f=new THREE.OrbitControls(s,a.domElement);f.enableZoom=!0;f.enablePan=!0;function P(n,o){const c=[];for(let r=-n/2;r<n/2;r+=o)for(let e=-n/2;e<n/2;e+=o)for(let t=-n/2;t<n/2;t+=o)c.push(r,e,t);return new Float32Array(c)}const H=30,y=3,R=P(H,y),u=new THREE.BufferGeometry;u.setAttribute("position",new THREE.BufferAttribute(R,3));const T=new THREE.PointsMaterial({size:.2,color:16777215}),b=new THREE.Points(u,T);i.add(b);const l=new THREE.BufferGeometry;l.setAttribute("position",new THREE.BufferAttribute(new Float32Array([0,0,0]),3));const g=new THREE.PointsMaterial({size:.5,color:16711680}),A=new THREE.Points(l,g);i.add(A);const E=new THREE.BufferGeometry;E.setAttribute("position",new THREE.BufferAttribute(new Float32Array([0,12,0]),3));const h=new THREE.PointsMaterial({size:.5,color:16753920}),G=new THREE.Points(E,h);i.add(G);const w=new THREE.BufferGeometry;w.setAttribute("position",new THREE.BufferAttribute(new Float32Array([12,0,0]),3));const M=new THREE.PointsMaterial({size:.5,color:255}),B=new THREE.Points(w,M);i.add(B);const m=new THREE.BufferGeometry;m.setAttribute("position",new THREE.BufferAttribute(new Float32Array([12,12,0]),3));const F=new THREE.PointsMaterial({size:.5,color:65280}),x=new THREE.Points(m,F);i.add(x);function p(){requestAnimationFrame(p),f.update(),a.render(i,s)}window.addEventListener("resize",()=>{s.aspect=window.innerWidth/window.innerHeight,s.updateProjectionMatrix(),a.setSize(window.innerWidth,window.innerHeight)});p();
